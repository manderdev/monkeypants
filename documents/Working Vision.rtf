{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch39\stshfhich39\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f39\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Calibri;}
{\f42\froman\fcharset238\fprq2 Times New Roman CE;}{\f43\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f45\froman\fcharset161\fprq2 Times New Roman Greek;}{\f46\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f47\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f48\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f49\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f50\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\f52\fswiss\fcharset238\fprq2 Arial CE;}{\f53\fswiss\fcharset204\fprq2 Arial Cyr;}{\f55\fswiss\fcharset161\fprq2 Arial Greek;}{\f56\fswiss\fcharset162\fprq2 Arial Tur;}{\f57\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f58\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f59\fswiss\fcharset186\fprq2 Arial Baltic;}{\f60\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f62\fmodern\fcharset238\fprq1 Courier New CE;}{\f63\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f65\fmodern\fcharset161\fprq1 Courier New Greek;}{\f66\fmodern\fcharset162\fprq1 Courier New Tur;}{\f67\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f68\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f69\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f70\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f432\fswiss\fcharset238\fprq2 Calibri CE;}{\f433\fswiss\fcharset204\fprq2 Calibri Cyr;}{\f435\fswiss\fcharset161\fprq2 Calibri Greek;}
{\f436\fswiss\fcharset162\fprq2 Calibri Tur;}{\f439\fswiss\fcharset186\fprq2 Calibri Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \f39\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive 
\ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f39\fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0{\lsdlockedexcept Normal;heading 1;heading 2;heading 3;heading 4;heading 5;heading 6;heading 7;heading 8;heading 9;toc 1;toc 2;toc 3;toc 4;toc 5;toc 6;toc 7;toc 8;toc 9;caption;Title;Default Paragraph Font;Subtitle;Strong;Emphasis;Table Grid;}}
{\*\listtable{\list\listtemplateid1382833822\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}}{\*\listoverridetable
{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 }}\ls1}}
{\*\rsidtbl \rsid1916482\rsid8526287}{\*\generator Microsoft Word 11.0.0000;}{\info{\operator martin_anderson}{\creatim\yr2010\mo9\dy6\hr9\min51}{\revtim\yr2010\mo9\dy21\hr13\min14}{\version3}{\edmins23}{\nofpages5}{\nofwords1649}{\nofchars9402}
{\nofcharsws11029}{\vern24613}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}{\xmlns2 urn:schemas-microsoft-com:office:smarttags}}
\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind1\viewscale100\rsidroot1916482 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \f39\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\f1\fs20\ul\insrsid1916482 Vision}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 Similar to Fit, }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8526287 MonkeyPants}{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid1916482  will take a num
ber of individual tests, execute them, and report what parts of what tests passed or failed. One or more tests are combined into a single "scenario", in which each test will capture or produce data (depending on its intent).
\par For example, say a scenario con
sists of two tests. The first test could accept search criteria and execute a search, while the second test could report on the search results. For each test to pass, any generated data must match the expected data shown in the test. For example, the firs
t test mentioned above may return "true" from its executed search, while the second test could produce multiple rows of multiple columns, each of which must match the expected data.
\par A single scenario (comprising one or more tests) can be run by itself. Multiple scenarios, comprising a "suite", can be run together, sequentially or multithreaded.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 What does a test look like?}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1916482 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
Multiple forms of supported input are planned, such as flat text files (csv, tab-delimited, etc) and Excel. Each unique type of input will require (someone like) us to build a supporting implementation of the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid1916482 ITestScenarioReader }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 interface, to convert the custom input format to a more uniform RawTest form.
\par The RawTest form of data can be represented (visually) as
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Title}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 Header1\tab Header2\tab Header3\tab Header4\tab ...
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 R1Data1\tab R1Data2\tab R1Data3\tab R1Data4\tab }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid1916482 ...}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par R2Data1\tab R2Data2\tab R2Data3\tab R2Data4\tab }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid1916482 ...}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid1916482 ...}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par or, from the RawTest constructor,
\par 
\par \tab }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 RawTest(string title, string[] headers, string[][] data) \{...\}
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par For example, the first test discussed above could be represented as
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Search People}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 First Name\tab Last Name\tab Search?}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par Buzz\tab Lightyear\tab true
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx6480\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 The second test could represent the expected output:
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Search Results}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 

\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 First Name\tab Middle Name\tab Last Name}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par Buzz\tab {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname City}}Arnold{\*\xmlclose}{\*\xmlclose}\tab Lightyear
\par Buzz\tab Dylan\tab Lightyear
\par Buzz\tab Elmer\tab Lightyear}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx6480\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 What does each test component represent?
\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 The Title identifies (directly or indirectly) a class used by the test. This is expanded on later.
\par Headers identify attributes, properties and/or methods in the class itself. If the header ends in a question mark, 
it identifies an "Action" method and indicates that the class (and the test) is an "Input" test; otherwise the test is an "Output" test. Both Titles and Headers can be capitalized and spaced for readability as desired; capitalization and spacing is ignore
d when looking for matching class names, properties etc.
\par Data provides values to (for Input tests) set the attributes, properties and methods with, or (for Output tests and Input test Action methods) to match against existing attributes, properties or metho
d results. Output data must exactly match the results, including spacing and capitalization, but not necessarily the row order.
\par Input tests are supplied data, and take one or more actions on that data, row-by-row. Output tests simply dump their contents, w
hich can be any number of rows (including zero). Again, the explicit difference between input and output tests is that Input tests have at least one Action header.
\par To give an example, the "Search People" tes
t above is an Input test. "SearchPeople" is the actual class name of some C# fixture (ignoring the embedded spaces and differences in capitalization) that is expected to receive data and produce some result. "FirstName" is a public instance property (or f
i
eld or method with one parameter) in the SearchPeople class, as is "LastName". When the test is exercised, the SearchPeople class is instantiated, its FirstName is set to "Buzz", its LastName is set to "Lightyear", and then its Search() method is executed
 and expected to return (the boolean or string) "true".
\par Similarly, the "Search Results" test is an Output test (notice no Action header). In this example, SearchResults is an instantiable class that provides an enumerator. FirstName, MiddleName and LastName
 are all public instance properties (or fields or no-parameter methods that return values) on the enumerated class. Note in this example it is not obvious where SearchResults gets its result data. In this example, SearchPeople must put the results somewhe
re that SearchResults knows where to look.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 Are Input tests limited to at most one Action method?}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 

\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
No. Action methods can appear anywhere in the test headers, and can be of any number. For example, the first test discussed above could be updated to be
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Search People}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx6480\tx9360\wrapdefault\faauto\rin0\lin0\itap0\pararsid1916482 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 Clear?\tab First Name\tab Last Name\tab Search?\tab RowCount?
}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par true\tab Buzz\tab Lightyear\tab true\tab 3
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx6480\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
Hopefully, the implicit meaning of the above is obvious: clear any search criteria, supply the FirstName and LastName as specified, execute Search() expecting a true respon
se, and confirm that the RowsCount() method returns 3. The only current limitation on action methods is that they all expect the same (or no) input parameter.
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 
\par How Is Data Transferred from One Test to Another?}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 The current usage of Fit dictates that it is 
up to the developer to determine how data is retained and/or moved between tests. For the example above, the "SearchPeople" instance could store the results of the search somewhere; it would be up to the "SearchResults" instance to know where to retrieve 
that data.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid8526287 MonkeyPants}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
 provides a cache that can be directly referenced by the tests. Each scenario is associated with its own unique cache, ensuring that multiple scenarios run in sequence or simultaneously do not impact each other. The symbol "}{\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \f2\fs20\insrsid1916482 =>}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
" will be used to indicate usage of the cache, for either input or output. Multiple cache entries can exist simultaneously, since each cache entry is identified by a name. The entries are retained until overwritten with the same cache entry name, or until
 the end of the scenario.
\par Let's update the above scenario to be more representative of how a common test might appear.
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Search People}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0\pararsid1916482 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 Clear?\tab First Name\tab Last Name\tab Search?\tab RowCount?
}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par true\tab Buzz\tab Lightyear\tab =>My Results\tab 3
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 
\par My Results=>}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 First Name\tab Middle Name\tab Last Name}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par Buzz\tab {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname City}}Arnold{\*\xmlclose}{\*\xmlclose}\tab Lightyear
\par Buzz\tab Dylan\tab Lightyear
\par Buzz\tab Elmer\tab Lightyear}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par Two changes have been made to the tests. In the "Search People" test, the return value of the Search Action method is inserted into the scenario cache under the name "My Results". Wherea
s the earlier versions of the fixture's Search() method returned a boolean indicating success or failure of the search, the new Search() method is assumed to return the }{\rtlch\fcs1 \ai\af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid1916482 results}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482  of the search, so that they may be cached for input to the second test. The second test uses the "My Results" cache entry to validate the results.
\par Caching allows us to do some interesting things, for example produce multiple result sets from a single test:
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Search People}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0\pararsid1916482 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 Clear?\tab First Name\tab Last Name\tab Search?\tab RowCount?
}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par true\tab Buzz\tab Lightyear\tab =>Good Results\tab 3
\par true\tab Darth\tab Vader\tab =>Evil Results\tab 1
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 What expectations are there on cached data?}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par One implication of the previous example is that output tests require a data source (identified by the title) to be an }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 IEnumerable<>}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
, so that they can enumerate through each resulting row, retrieving values from the enumerated objects. In the "My Results" example, each enumerated object would th
us have a FirstName, MiddleName and LastName property, field, or method, to compare against the multiple expected rows of output. If the results are not an }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 IEnumerable<>}{\rtlch\fcs1 \af1\afs20 
\ltrch\fcs0 \f1\fs20\insrsid1916482 , the output test would demand that properties FirstName, MiddleName and LastName be directly on the data source object itself, and no more than a single result row could be expected.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 Are there alternate structures available for Input fixtures?}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par Any of the following SearchPeople class signatures would be acceptable (assuming proper implementation, of course):
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\ul\insrsid1916482 Option 1}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 public class SearchPeople
\par \{
\par \tab public string FirstName \{get; set; \}
\par \tab public string LastName \{get; set; \}
\par \tab public bool Clear() ...
\par \tab public List<People> Search() ...
\par \tab public int RowCount() ...
\par \}
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\ul\insrsid1916482 Option 2}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 public class SearchPeople
\par \{
\par \tab public void FirstName(string name) ...
\par \tab public void LastName(string name) ...
\par \tab public bool Clear() ...
\par \tab public SearchResultsEnumerable Search() ...
\par \tab public int RowCount() ...
\par \}
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\ul\insrsid1916482 Option 3}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 public class SearchPeople
\par \{
\par \tab public string FirstName;
\par \tab public string LastName;
\par \tab public bool Clear() ...
\par \tab public People[] Search() ...
\par \tab public int RowCount() ...
\par \}
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\ul\insrsid1916482 Option 4}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 public class SearchPeople
\par \{
\par \tab public bool Clear(SearchInputDto input) ...
\par \tab public ArrayList Search(SearchInputDto input) ...
\par \tab public int RowCount(SearchInputDto input) ...
\par \}
\par 
\par public class SearchInputDto
\par \{
\par \tab public string FirstName \{get; set; \}
\par \tab public string LastName \{get; set; \}
\par \}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 There are, of course, other examples. To be an Input test, there must be at least one header name t
hat ends in a question mark, and there must be a one-to-one match between the other headers and
\par 
\par {\pntext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid1916482 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li1080\ri0\nowidctlpar\tx1080\wrapdefault{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}
\faauto\ls1\rin0\lin1080\itap0\pararsid1916482 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 a combination of public instance properties, fields and/or single-parameter methods directly on the (title) class or adapter (see later); or
\par {\pntext\pard\plain\ltrpar \rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f3\fs20\insrsid1916482 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li1080\ri0\nowidctlpar\tx1080\wrapdefault{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}
\faauto\ls1\rin0\lin1080\itap0\pararsid1916482 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 a combination of public instance properties, fields and/or single-parameter methods on a class used as the single parameter to the Action methods.}{
\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par When an Action method expects a parameter, }{\rtlch\fcs1 \ai\af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid1916482 all}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482  Action methods expect the parameter, because the parameter is in effect re
placing the title class or adapter as the target object in which all data values are set before exercising the actions.
\par 
\par Also note how the Search() return values may vary.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1916482 Are there alternate structures available for cached data?}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par All the cache examples above put an IEnumerable<> object in the cache. This may often be unrealistic. Let's take the example one step further; let's say SearchPeople.Search() returns a non-enumerable "Search Results DTO", a common situation:
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 public class SearchPeople
\par \{
\par \tab ...
\par \tab public SearchResultsDto Search() ...
\par \tab ...
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 \tab \}
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par \tab public class SearchResultsDto
\par \tab \{
\par \tab \tab public List<People> SearchResults \{ get; private set; \}
\par \tab \tab public int PageCount \{ get; private set; \}
\par \tab \}
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 If a SearchResultsDto instance were cached, there would be no easy way for an output test to determine how to get its enumerated People results. We could get the other data...
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 
\par My Results=>}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 Page Count}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par 12}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par ... but for the list of resulting people, we need a SearchResultsAdapter:
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 
\par My Results=>Search Results Adapter}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 First Name\tab Middle Name\tab Last Name}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par Buzz\tab {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname City}}Arnold{\*\xmlclose}{\*\xmlclose}\tab Lightyear
\par Buzz\tab Dylan\tab Lightyear
\par Buzz\tab Elmer\tab Lightyear}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2160\tx3600\tx5040\tx6480\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 ...
\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 In this example, SearchResultsAdapter is an 
adapter class with a constructor that accepts an object of the type cached under the name "My Results", in this case a SearchResultsDto. The Adapter is an IEnumerable<People>.
\par The flexibility of cached data means we have the potential to support tests that
 construct objects to be used as Inputs. Is there anything stopping us from having fixtures that create Input objects (injecting necessary dependencies), so they can directly be used in tests? For example,
\par 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 Create People Task}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\ul\insrsid1916482 
\par Create?}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par =>People Task}{\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 
\par 
\par People Task=>}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 First Name\tab Last Name\tab Search?
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 Buzz\tab Lightyear\tab =>My Results
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1916482 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 Given that there may be a large number of tasks in a system, it would be somewhat painful to construct a "Create }{
\rtlch\fcs1 \ai\af1\afs20 \ltrch\fcs0 \i\f1\fs20\insrsid1916482 X}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 " fixture for each task. Perhaps a better input "test" would be
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 
\par Create Tasks}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid1916482 
\par Task Name\tab Create?}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid1916482 
\par PeopleTask\tab =>People Task
\par AddressTask\tab =>Address Task
\par ...
\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx3600\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af2\afs20 \ltrch\fcs0 \b\f2\fs20\ul\insrsid1916482 
\par 
\par }\pard \ltrpar\ql \fi360\li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\tx2880\tx5040\tx7200\tx9360\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1916482 
\par }}